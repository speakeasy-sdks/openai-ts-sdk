/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * The name and arguments of a function that should be called, as generated by the model.
 */
export class ChatCompletionResponseMessageFunctionCall extends SpeakeasyBase {
    /**
     * The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "arguments" })
    arguments: string;

    /**
     * The name of the function to call.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;
}

/**
 * The role of the author of this message.
 */
export enum ChatCompletionResponseMessageRole {
    System = "system",
    User = "user",
    Assistant = "assistant",
    Function = "function",
}

export class ChatCompletionResponseMessage extends SpeakeasyBase {
    /**
     * The contents of the message.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "content" })
    content: string;

    /**
     * The name and arguments of a function that should be called, as generated by the model.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "function_call" })
    @Type(() => ChatCompletionResponseMessageFunctionCall)
    functionCall?: ChatCompletionResponseMessageFunctionCall;

    /**
     * The role of the author of this message.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "role" })
    role: ChatCompletionResponseMessageRole;
}
