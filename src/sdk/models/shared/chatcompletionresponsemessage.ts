/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChatCompletionMessageToolCall } from "./chatcompletionmessagetoolcall";
import { Expose, Type } from "class-transformer";

/**
 * Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.
 *
 * @deprecated class: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export class FunctionCall extends SpeakeasyBase {
    /**
     * The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "arguments" })
    arguments: string;

    /**
     * The name of the function to call.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;
}

/**
 * The role of the author of this message.
 */
export enum Role {
    Assistant = "assistant",
}

/**
 * A chat completion message generated by the model.
 */
export class ChatCompletionResponseMessage extends SpeakeasyBase {
    /**
     * The contents of the message.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "content" })
    content: string;

    /**
     * Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.
     *
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "function_call" })
    @Type(() => FunctionCall)
    functionCall?: FunctionCall;

    /**
     * The role of the author of this message.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "role" })
    role: Role;

    /**
     * The tool calls generated by the model, such as function calls.
     */
    @SpeakeasyMetadata({ elemType: ChatCompletionMessageToolCall })
    @Expose({ name: "tool_calls" })
    @Type(() => ChatCompletionMessageToolCall)
    toolCalls?: ChatCompletionMessageToolCall[];
}
