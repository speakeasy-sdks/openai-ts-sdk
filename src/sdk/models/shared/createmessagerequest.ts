/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
 *
 * @remarks
 *
 */
export class CreateMessageRequestMetadata extends SpeakeasyBase {}

/**
 * The role of the entity that is creating the message. Currently only `user` is supported.
 */
export enum CreateMessageRequestRole {
    User = "user",
}

export class CreateMessageRequest extends SpeakeasyBase {
    /**
     * The content of the message.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "content" })
    content: string;

    /**
     * A list of [File](/docs/api-reference/files) IDs that the message should use. There can be a maximum of 10 files attached to a message. Useful for tools like `retrieval` and `code_interpreter` that can access and use files.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "file_ids" })
    fileIds?: string[];

    /**
     * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "metadata" })
    @Type(() => CreateMessageRequestMetadata)
    metadata?: CreateMessageRequestMetadata;

    /**
     * The role of the entity that is creating the message. Currently only `user` is supported.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "role" })
    role: CreateMessageRequestRole;
}
