/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class CreateClassificationRequest extends SpeakeasyBase {
    /**
     * A list of examples with labels, in the following format:
     *
     * @remarks
     *
     * `[["The movie is so interesting.", "Positive"], ["It is quite boring.", "Negative"], ...]`
     *
     * All the label strings will be normalized to be capitalized.
     *
     * You should specify either `examples` or `file`, but not both.
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "examples" })
    examples?: string[][];

    @SpeakeasyMetadata()
    @Expose({ name: "expand" })
    expand?: any;

    /**
     * The ID of the uploaded file that contains training examples. See [upload file](/docs/api-reference/files/upload) for how to upload a file of the desired format and purpose.
     *
     * @remarks
     *
     * You should specify either `examples` or `file`, but not both.
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "file" })
    file?: string;

    /**
     * The set of categories being classified. If not specified, candidate labels will be automatically collected from the examples you provide. All the label strings will be normalized to be capitalized.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "labels" })
    labels?: string[];

    @SpeakeasyMetadata()
    @Expose({ name: "logit_bias" })
    logitBias?: any;

    @SpeakeasyMetadata()
    @Expose({ name: "logprobs" })
    logprobs?: any;

    /**
     * The maximum number of examples to be ranked by [Search](/docs/api-reference/searches/create) when using `file`. Setting it to a higher value leads to improved accuracy but with increased latency and cost.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "max_examples" })
    maxExamples?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "model" })
    model: any;

    /**
     * Query to be classified.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "query" })
    query: string;

    @SpeakeasyMetadata()
    @Expose({ name: "return_metadata" })
    returnMetadata?: any;

    @SpeakeasyMetadata()
    @Expose({ name: "return_prompt" })
    returnPrompt?: any;

    @SpeakeasyMetadata()
    @Expose({ name: "search_model" })
    searchModel?: any;

    /**
     * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "temperature" })
    temperature?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    user?: any;
}
