/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RunCompletionUsage } from "./runcompletionusage";
import { RunToolCallObject } from "./runtoolcallobject";
import { Expose, Type } from "class-transformer";

/**
 * One of `server_error`, `rate_limit_exceeded`, or `invalid_prompt`.
 */
export enum Code {
    ServerError = "server_error",
    RateLimitExceeded = "rate_limit_exceeded",
    InvalidPrompt = "invalid_prompt",
}

/**
 * The last error associated with this run. Will be `null` if there are no errors.
 */
export class LastError extends SpeakeasyBase {
    /**
     * One of `server_error`, `rate_limit_exceeded`, or `invalid_prompt`.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "code" })
    code: Code;

    /**
     * A human-readable description of the error.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    message: string;
}

/**
 * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
 *
 * @remarks
 *
 */
export class RunObjectMetadata extends SpeakeasyBase {}

/**
 * The object type, which is always `thread.run`.
 */
export enum RunObjectObject {
    ThreadRun = "thread.run",
}

/**
 * Details on the tool outputs needed for this run to continue.
 */
export class SubmitToolOutputs extends SpeakeasyBase {
    /**
     * A list of the relevant tool calls.
     */
    @SpeakeasyMetadata({ elemType: RunToolCallObject })
    @Expose({ name: "tool_calls" })
    @Type(() => RunToolCallObject)
    toolCalls: RunToolCallObject[];
}

/**
 * For now, this is always `submit_tool_outputs`.
 */
export enum RunObjectType {
    SubmitToolOutputs = "submit_tool_outputs",
}

/**
 * Details on the action required to continue the run. Will be `null` if no action is required.
 */
export class RequiredAction extends SpeakeasyBase {
    /**
     * Details on the tool outputs needed for this run to continue.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "submit_tool_outputs" })
    @Type(() => SubmitToolOutputs)
    submitToolOutputs: SubmitToolOutputs;

    /**
     * For now, this is always `submit_tool_outputs`.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type: RunObjectType;
}

/**
 * The status of the run, which can be either `queued`, `in_progress`, `requires_action`, `cancelling`, `cancelled`, `failed`, `completed`, or `expired`.
 */
export enum RunObjectStatus {
    Queued = "queued",
    InProgress = "in_progress",
    RequiresAction = "requires_action",
    Cancelling = "cancelling",
    Cancelled = "cancelled",
    Failed = "failed",
    Completed = "completed",
    Expired = "expired",
}

/**
 * Represents an execution run on a [thread](/docs/api-reference/threads).
 */
export class RunObject extends SpeakeasyBase {
    /**
     * The ID of the [assistant](/docs/api-reference/assistants) used for execution of this run.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "assistant_id" })
    assistantId: string;

    /**
     * The Unix timestamp (in seconds) for when the run was cancelled.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "cancelled_at" })
    cancelledAt: number;

    /**
     * The Unix timestamp (in seconds) for when the run was completed.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "completed_at" })
    completedAt: number;

    /**
     * The Unix timestamp (in seconds) for when the run was created.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    createdAt: number;

    /**
     * The Unix timestamp (in seconds) for when the run will expire.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "expires_at" })
    expiresAt: number;

    /**
     * The Unix timestamp (in seconds) for when the run failed.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "failed_at" })
    failedAt: number;

    /**
     * The list of [File](/docs/api-reference/files) IDs the [assistant](/docs/api-reference/assistants) used for this run.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "file_ids" })
    fileIds: string[];

    /**
     * The identifier, which can be referenced in API endpoints.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    /**
     * The instructions that the [assistant](/docs/api-reference/assistants) used for this run.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "instructions" })
    instructions: string;

    /**
     * The last error associated with this run. Will be `null` if there are no errors.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "last_error" })
    @Type(() => LastError)
    lastError: LastError;

    /**
     * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "metadata" })
    @Type(() => RunObjectMetadata)
    metadata: RunObjectMetadata;

    /**
     * The model that the [assistant](/docs/api-reference/assistants) used for this run.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "model" })
    model: string;

    /**
     * The object type, which is always `thread.run`.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "object" })
    object: RunObjectObject;

    /**
     * Details on the action required to continue the run. Will be `null` if no action is required.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "required_action" })
    @Type(() => RequiredAction)
    requiredAction: RequiredAction;

    /**
     * The Unix timestamp (in seconds) for when the run was started.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "started_at" })
    startedAt: number;

    /**
     * The status of the run, which can be either `queued`, `in_progress`, `requires_action`, `cancelling`, `cancelled`, `failed`, `completed`, or `expired`.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status: RunObjectStatus;

    /**
     * The sampling temperature used for this run. If not set, defaults to 1.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "temperature" })
    temperature?: number;

    /**
     * The ID of the [thread](/docs/api-reference/threads) that was executed on as a part of this run.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "thread_id" })
    threadId: string;

    /**
     * The list of tools that the [assistant](/docs/api-reference/assistants) used for this run.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "tools" })
    tools: any[];

    /**
     * Usage statistics related to the run. This value will be `null` if the run is not in a terminal state (i.e. `in_progress`, `queued`, etc.).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "usage" })
    @Type(() => RunCompletionUsage)
    usage: RunCompletionUsage;
}
