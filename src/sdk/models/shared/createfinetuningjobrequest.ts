/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * The number of epochs to train the model for. An epoch refers to one
 *
 * @remarks
 * full cycle through the training dataset.
 *
 */
export enum CreateFineTuningJobRequestHyperparametersNEpochs1 {
    Auto = "auto",
}

/**
 * The hyperparameters used for the fine-tuning job.
 */
export class CreateFineTuningJobRequestHyperparameters extends SpeakeasyBase {
    /**
     * The number of epochs to train the model for. An epoch refers to one
     *
     * @remarks
     * full cycle through the training dataset.
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "n_epochs" })
    nEpochs?: any;
}

/**
 * The name of the model to fine-tune. You can select one of the
 *
 * @remarks
 * [supported models](/docs/guides/fine-tuning/what-models-can-be-fine-tuned).
 *
 */
export enum CreateFineTuningJobRequestModel2 {
    Babbage002 = "babbage-002",
    Davinci002 = "davinci-002",
    Gpt35Turbo = "gpt-3.5-turbo",
}

export class CreateFineTuningJobRequest extends SpeakeasyBase {
    /**
     * The hyperparameters used for the fine-tuning job.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "hyperparameters" })
    @Type(() => CreateFineTuningJobRequestHyperparameters)
    hyperparameters?: CreateFineTuningJobRequestHyperparameters;

    /**
     * The name of the model to fine-tune. You can select one of the
     *
     * @remarks
     * [supported models](/docs/guides/fine-tuning/what-models-can-be-fine-tuned).
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "model" })
    model: any;

    /**
     * A string of up to 18 characters that will be added to your fine-tuned model name.
     *
     * @remarks
     *
     * For example, a `suffix` of "custom-model-name" would produce a model name like `ft:gpt-3.5-turbo:openai:custom-model-name:7p4lURel`.
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "suffix" })
    suffix?: string;

    /**
     * The ID of an uploaded file that contains training data.
     *
     * @remarks
     *
     * See [upload file](/docs/api-reference/files/upload) for how to upload a file.
     *
     * Your dataset must be formatted as a JSONL file. Additionally, you must upload your file with the purpose `fine-tune`.
     *
     * See the [fine-tuning guide](/docs/guides/fine-tuning) for more details.
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "training_file" })
    trainingFile: string;

    /**
     * The ID of an uploaded file that contains validation data.
     *
     * @remarks
     *
     * If you provide this file, the data is used to generate validation
     * metrics periodically during fine-tuning. These metrics can be viewed in
     * the fine-tuning results file.
     * The same data should not be present in both train and validation files.
     *
     * Your dataset must be formatted as a JSONL file. You must upload your file with the purpose `fine-tune`.
     *
     * See the [fine-tuning guide](/docs/guides/fine-tuning) for more details.
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "validation_file" })
    validationFile?: string;
}
