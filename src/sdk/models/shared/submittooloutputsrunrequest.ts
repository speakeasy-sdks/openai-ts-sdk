/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class ToolOutputs extends SpeakeasyBase {
    /**
     * The output of the tool call to be submitted to continue the run.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "output" })
    output?: string;

    /**
     * The ID of the tool call in the `required_action` object within the run object the output is being submitted for.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "tool_call_id" })
    toolCallId?: string;
}

export class SubmitToolOutputsRunRequest extends SpeakeasyBase {
    /**
     * If `true`, returns a stream of events that happen during the Run as server-sent events, terminating when the Run enters a terminal state with a `data: [DONE]` message.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "stream" })
    stream?: boolean;

    /**
     * A list of tools for which the outputs are being submitted.
     */
    @SpeakeasyMetadata({ elemType: ToolOutputs })
    @Expose({ name: "tool_outputs" })
    @Type(() => ToolOutputs)
    toolOutputs: ToolOutputs[];
}
